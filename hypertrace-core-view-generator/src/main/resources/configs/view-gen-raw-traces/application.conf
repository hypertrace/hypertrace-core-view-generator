service.name = view-gen-raw-traces
service.admin.port = 8099

main.class = org.hypertrace.core.viewgenerator.service.ViewGeneratorLauncher

flink.job {
  metrics {
    metrics.reporters = "prometheus"
    metrics.reporter.prometheus.class = "org.hypertrace.core.serviceframework.metrics.flink.PrometheusReporter"
    metrics.reporter.slf4j.class: org.apache.flink.metrics.slf4j.Slf4jReporter
    metrics.reporter.slf4j.interval: "60 SECONDS"
  }
}

flink.source {
  type = kafka
  topic = "structured-traces-from-raw-spans"
  input.class = org.hypertrace.core.datamodel.StructuredTrace
  schema.registry {
    schema.registry.url = "http://localhost:8081"
    specific.avro.reader = true
  }
  kafka {
    bootstrap.servers = "localhost:9092"
    group.id = "raw-traces-view-generation-job"
    auto.offset.reset = "latest"
    enable.auto.commit = true
    auto.commit.interval.ms = 5000
  }
}

flink.sink {
  type = kafka
  topic = "raw-trace-view-events"
  log.failures.only = true
  schema.registry {
    schema.registry.url = "http://localhost:8081"
  }
  kafka {
    bootstrap.servers = "localhost:9092"
  }
}

view.generator.class = org.hypertrace.core.viewgenerator.generators.RawTraceViewGenerator

logger {
  names = ["file"]
  file {
    dir = "/var/logs/view-gen-raw-traces"
  }
}

metrics.reporter {
  prefix = org.hypertrace.viewgenerator.viewGenRawTraces
  names = ["prometheus"]
  console.reportInterval = 30
}
